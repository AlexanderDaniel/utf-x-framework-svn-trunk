<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   $Id$
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   $Source: /cvs/utf-x/framework/src/dtd/utfx_tests.dtd,v $
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   $Name:  $
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
   Copyright (C) 2004-2006 UTF-X Development team.
  
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
   UTF-X test definition file (TDF) Document Type Definition
  
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<xs:schema elementFormDefault="qualified" targetNamespace="http://utfx.org/test-definition"
  xmlns:utfx="http://utfx.org/test-definition" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- root element -->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:element name="tests">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="stylesheet" type="utfx:stylesheet"/>
        <xs:element minOccurs="0" name="css" type="utfx:css"/>
        <xs:element minOccurs="0" ref="utfx:source-validation"/>
        <xs:element minOccurs="0" ref="utfx:expected-validation"/>
        <xs:element minOccurs="0" ref="utfx:source-builder"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" ref="utfx:test"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- XLST stylesheet type -->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:complexType name="stylesheet">
    <xs:attribute name="src" use="required">
      <xs:annotation>
        <xs:documentation>Relative URI pointing to the XSLT stylesheet that is being
        tested</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="output" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="xhtml"/>
          <xs:enumeration value="fo"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- CSS stylesheet type -->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <xs:complexType name="css">
    <xs:annotation>
      <xs:documentation>Can be used when the output produced by the XSLT stylesheet is HTML styled
        by an external CSS stylesheet. Path to this CSS can be specified here so the HTML rendition
        of the test definition file uses the same CSS stylesheet.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="uri" use="required">
      <xs:annotation>
        <xs:documentation>Relative URI pointing to the CSS stylesheet.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="source-validation" type="utfx:utfx.dtd"/>
  <xs:element name="expected-validation" type="utfx:utfx.dtd"/>

  <xs:complexType name="utfx.dtd">
    <xs:sequence>
      <xs:element ref="utfx:dtd"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="dtd">
    <xs:complexType>
      <xs:attributeGroup ref="utfx:attlist.utfx.dtd"/>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.dtd">
    <xs:attribute name="public"/>
    <xs:attribute name="system" use="required"/>
  </xs:attributeGroup>

  <xs:element name="source-builder">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="utfx:class-name"/>
        <xs:element ref="utfx:constructor-params"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="class-name" type="xs:string"/>

  <xs:element name="constructor-params">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" ref="utfx:param"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="param">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="utfx:attlist.utfx.param"/>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.param">
    <xs:attribute default="String" name="type">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="String"/>
          <xs:enumeration value="Integer"/>
          <xs:enumeration value="Boolean"/>
          <xs:enumeration value="Double"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:element name="test">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="utfx:name"/>
        <xs:element minOccurs="0" ref="utfx:stylesheet-params"/>
        <xs:element minOccurs="0" ref="utfx:source-builder"/>
        <xs:element minOccurs="0" ref="utfx:call-template"/>
        <xs:element ref="utfx:assert-equal"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="stylesheet-params">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" ref="utfx:with-param"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="call-template">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" minOccurs="0" ref="utfx:with-param"/>
      </xs:sequence>
      <xs:attributeGroup ref="utfx:attlist.utfx.call-template"/>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.call-template">
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>

  <xs:element name="with-param">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="utfx:any">
          <xs:attributeGroup ref="utfx:attlist.utfx.with-param"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.with-param">
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="select"/>
  </xs:attributeGroup>

  <xs:element name="name" type="xs:string"/>

  <xs:element name="assert-equal">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="utfx:source"/>
        <xs:element ref="utfx:expected"/>
        <xs:element minOccurs="0" ref="utfx:message"/>
      </xs:sequence>
      <xs:attributeGroup ref="utfx:attlist.utfx.assert-equal"/>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.assert-equal">
    <xs:attribute default="no" name="normalise-internal-whitespace">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="yes"/>
          <xs:enumeration value="no"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:element name="source">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="utfx:any">
          <xs:attributeGroup ref="utfx:attlist.utfx.source"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.source">

    <xs:attribute default="yes" name="validate">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="yes"/>
          <xs:enumeration value="no"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>

    <xs:attribute default="false" name="use-source-parser" type="xs:boolean">
      <xs:annotation>
        <xs:documentation/>
      </xs:annotation>
    </xs:attribute>

    <xs:attribute default="preserve" ref="xml:space">
      <xs:annotation>
        <xs:documentation>This attribute is ignored by the UTF-X framework</xs:documentation>
      </xs:annotation>
    </xs:attribute>

    <xs:attribute name="context-node" use="optional"/>
    <xs:attribute name="select" type="xs:string" use="optional"/>
    <xs:attribute name="href" type="xs:anyURI" use="optional"/>
  </xs:attributeGroup>

  <xs:element name="expected">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="utfx:any">
          <xs:attributeGroup ref="utfx:attlist.utfx.expected"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:attributeGroup name="attlist.utfx.expected">
    <xs:attribute default="yes" name="validate">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="yes"/>
          <xs:enumeration value="no"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute default="preserve" ref="xml:space"/>
  </xs:attributeGroup>

  <xs:element name="message" type="xs:string"/>

  <xs:complexType mixed="true" name="any">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
