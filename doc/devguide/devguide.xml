<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://utf-x.sourceforge.net/xsd/utfxdoc_1_0/utfxdoc.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:utfx="http://utfx.org/test-definition"
    xsi:schemaLocation="http://utf-x.sourceforge.net/xsd/utfxdoc_1_0/utfxdoc.xsd ../../samples/utfxdoc/utfxdoc.xsd">
    <title>UTF-X</title>
    <subtitle>Guide for Developers</subtitle>
    <author>Jacek Radajewski</author>
    <version>$Revision: 1.11.2.3 $</version>
    <date>30 July 2006</date>
    <sect1 id="environment">
        <title>Development Environment</title>
        <sect2 id="recommended_tools">
            <title>Recommended Tools</title>
            <para>This section contains a list of recommended development tools. These tools have
                been chosen because they are free (or very cheap) and the project has been already
                correctly configured to work with these tools.</para>
            <para>Most tools listed here are optional, but some, such as a Java compiler are
                obviously required.</para>
            <sect3 id="jdk">
                <title>JDK 5.0</title>
                <para>UTF-X uses Java 5 language features so you'll need Java 5 or later. UTF-X will
                    not compile or run on earlier versions of Java.</para>
            </sect3>
            <sect3 id="eclipse">
                <title>Eclipse 3.2</title>
                <para><link url="http://eclipse.org">Eclipse</link> is the preferred IDE.</para>
            </sect3>
            <sect3 id="ant">
                <title>Ant 1.6.*</title>
                <para><link url="http://ant.apache.org">Ant</link> is used for various tasks
                    including building, documentation generation and testing.</para>
            </sect3>
            <sect3 id="myeclipse">
                <title>MyEclipse 4.1.1 GA</title>
                <para><link url="http://www.myeclipseide.com/">MyEclipse Enterprise Workbench</link>
                    is a commercial plugin for the Eclipse platform. It provides a huge range of
                    functionality from XML authoring through to UML and J2EE development. Some
                    aspects of the UTF-X project have been configured for MyEclipse and you will
                    spend your money well if you decide to buy this plugin. Annual subscription cost
                    for MyEclipse home license is USD 29.99. MyEclipse is optional.</para>
            </sect3>
            <sect3 id="oxygenxml">
                <title><![CDATA[<oXygen/>]]> XML Editor 7.2 plugin for Eclipse</title>
                <para>
                    <link url="http://www.oxygenxml.com/"><![CDATA[<oXygen/>]]> XML Editor
                    7.2</link> plugin for the Eclipse platform provides a vast range of
                    functionality for working with XML, XSLT, XSL:FO, XML Schemas and XPath. If you
                    are mainly a Java developer and are not planning on doing a lot of work with XML
                    and XSLT then functionalities provided by <xref idref="myeclipse"/> may be
                    sufficient to you. Also, you may already have a different XML/XSL authoring tool
                    such as XML Spy.</para>
                <para><![CDATA[<oXygen/>]]> XML Editor home license costs USD 48.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Configuring Your Environment</title>
            <para>This section explains how to configure your development environment for UTF-X
                development. This section only covers general configuration and tools listed in the
                    <xref idref="recommended_tools"/> section.</para>
            <sect3>
                <title>CVS Checkout</title>
                <para>This section shows how to checkout UTF-X from the CVS repository using the
                    Eclipse 3.2 IDE. The CVS repository contains Eclipse configuration files for the
                    project and if you follow the process described below your project environment
                    will be configured correctly after the initial checkout.</para>
                <para>The following is a step-by-step guide:</para>
                <para>From the File menu select 'New Project'. A windows wil pop up in which you
                    need to expand the CVS item and select 'Projects from CVS'.</para>
                <figure>
                    <img src="images/eclipse/cvs_checkout_1.png" width="525px"/>
                    <caption>'Projects from CVS'</caption>
                </figure>
                <para>Click 'Next' and you will be prompted for repository location information.
                    Fill in the text fields as shown below using your own java.net username and
                    password.</para>
                <figure>
                    <img src="images/eclipse/cvs_checkout_2.png" width="530px"/>
                    <caption>Repository location information</caption>
                </figure>

                <figure>
                    <img src="images/eclipse/cvs_checkout_3.png" width="530px"/>
                    <caption>Specify module as shown</caption>
                </figure>
                <para>Click Next and you change the project name from 'framework' to 'utf-x'.</para>
                <figure>
                    <img src="images/eclipse/cvs_checkout_4.png" width="530px"/>
                    <caption>Name the project 'utf-x'</caption>
                </figure>
                <figure>
                    <img src="images/eclipse/cvs_checkout_5.png" width="530px"/>
                    <caption/>
                </figure>
                <figure>
                    <img src="images/eclipse/cvs_checkout_6.png" width="530px"/>
                    <caption/>
                </figure>
                <figure>
                    <img src="images/eclipse/cvs_checkout_7.png" width="538px"/>
                    <caption/>
                </figure>
            </sect3>
            <sect3>
                <title>Configuring XML Catalog</title>
                <para>Project root directory contains an <link
                        url="http://www.oasis-open.org/committees/entity/spec-2001-08-06.html">XML
                        Catalog</link> file <code>catalog.xml</code> file which is used by various
                    UTF-X processes to resolve PUBLIC identifiers. You should tell the
                    <![CDATA[<oXygen/>]]> XML editor about this catalog file so it knows where to
                    find relevant DTDs.</para>
                <figure>
                    <img src="images/eclipse/oxygen_xml_catalog.jpg" width="668px"/>
                    <caption>Adding UTF-X XML catalog to <![CDATA[<oXygen/>'s catalogs.]]></caption>
                </figure>
                <para>MyEclipse does not allow you to add catalog files, just individual entries.</para>
                <figure>
                    <img src="images/eclipse/myeclipse_xml_catalog_entries.jpg" width="591px"/>
                    <caption>MyEclipse XML Catalog entries</caption>
                </figure>
                <para>If you want to edit UTF-X XML files with MyEclipse XML editor then you should
                    copy the entries from UTF-X <code>catalog.xml</code> file to MyEclipse XML
                    Catalog.</para>
                <figure>
                    <img src="images/eclipse/myeclipse_xml_catalog_adding_entry.jpg" width="428px"/>
                    <caption>Adding an entry to MyEclipse XML catalog</caption>
                </figure>
            </sect3>
            <sect3>
                <title>Subversion@SourceForge</title>
                <para>This is how you access the subversion repository on SourceForge.net</para>
                <unordered_list>
                    <item>On Windows <link
                            url="http://prdownloads.sourceforge.net/tortoisesvn/TortoiseSVN-1.4.0.7501-win32-svn-1.4.0.msi?download"
                            >download Tortoise SVN</link>; the project site is <link
                            url="http://tortoisesvn.tigris.org/">here</link>. Linux ships with a
                        command line client <code>svn</code>.</item>
                    <item>
                        <link url="http://subclipse.tigris.org/install.html">This is how you install
                            subversion support for Eclipse.</link>
                    </item>
                    <item>Our subversion repository is at <link
                            url="https://svn.sourceforge.net/svnroot/utf-x"
                            >https://svn.sourceforge.net/svnroot/utf-x</link></item>
                    <item>Our website is under a module called <code>utf-x-website</code></item>
                    <item>In order to update the web site using the content from the subversion
                        repository: oops ... what happened to the nested lists in utfxdoc?
                        (instructions below)</item>
                </unordered_list>
                <para>Updating web site content:</para>
                <ordered_list>
                    <item>Login to shell.sourceforge.net using a SSH client and your sourceforge account.</item>
                    <item>Change directory to <code>/home/groups/u/ut/utf-x/htdocs/new</code></item>
                    <item><code>svn update</code></item>
                </ordered_list>
            </sect3>
        </sect2>
    </sect1>
    <sect1 id="methodology">
        <title>Methodology</title>
        <para>In principle the UTF-X project follows the <link
                url="http://www.extremeprogramming.org/">eXtreme Programming (XP)</link> development
            methodology. Even though some aspects of XP like pair programming and standup meetings
            are difficult (not impossible) to achieve when the team is spread across different
            continents, the aim is to adopt as many of the <link
                url="http://www.extremeprogramming.org/rules.html">XP rules</link> as possible.</para>
        <para>Below is a list of currently adopted XP rules:</para>
        <sect2 id="release_planning">
            <title>Release Planning</title>
            <para>Since the project is again gaining momentum and more developers are actively
                involved, <link url="http://www.extremeprogramming.org/rules/planninggame.html"
                    >release planning</link> will soon become a more formal approach.</para>
        </sect2>
        <sect2>
            <title>Small Releases</title>
            <para><link url="http://www.extremeprogramming.org/rules/releaseoften.html">Small,
                    frequent releases</link> ... define, how often, every 4 or 6 weeks?</para>
        </sect2>
        <sect2>
            <title>Coding Standards</title>
            <para>
                <link url="http://www.extremeprogramming.org/rules/standards.html">Coding
                standards</link> ensure consistent quality results. This guide is all about
                standards. </para>
        </sect2>
        <sect2>
            <title>Test-First-Design</title>
            <para>
                <link url="http://www.extremeprogramming.org/rules/testfirst.html"
                >Test-first-design</link> particularly important in this project as the product we
                are developing is a unit testing framework which promotes test-first-design. Basic
                process for writing a new Java method and tests would be: </para>
            <ordered_list>
                <item>Write method signature.</item>
                <item>Document what the method does including any exceptions thrown, pre and post
                    conditions, all parameters and return value</item>
                <item>Write one or more unit tests for the method making sure all functionality is
                    tested.</item>
                <item>Run the test(s). Should fail.</item>
                <item>Implement the method until all tests pass.</item>
            </ordered_list>
            <para>Depending on the complexity of the method the above may be an iterative process.
                If the method is non-trivial you should create a test for one particular bit of
                functionality and then implement the functionality. Do the same for other bits of
                functionality until all bits of functionality are implemented and all tests pass.</para>
            <para>If <link url="http://www.extremeprogramming.org/rules/bugs.html">a bug is
                found</link> in existing code then a unit test that fails due to this bug should be
                written first. Once the test is written you should fix the bug until the test
                passes. If you do this then this bug will never cause problem again.</para>
        </sect2>
        <sect2>
            <title>Collective Ownership</title>
            <para><link url="http://www.extremeprogramming.org/rules/collective.html">Collective
                    ownership</link> means that we all own all parts of UTF-X. You may design and
                develop a module today but tomorrow someone else will be enhancing what you have
                done and vice versa. There is no "my code" or "your code", its the team's
            code!</para>
        </sect2>
        <sect2>
            <title>Optimise Last</title>
            <para>Design well and <link url="http://www.extremeprogramming.org/rules/optimize.html"
                    >optimise last</link> means that you should not design for performance, but
                concentrate on good design techniques and utilise well know OO design patterns. If
                performance is poor and needs to be improved then it can be done later, but in most
                cases it will be just fine.</para>
        </sect2>
        <sect2>
            <title>Never add Functionality Early</title>
            <para><link url="http://www.extremeprogramming.org/rules/bugs.html">Never add
                    functionality early</link>, just in case it may be needed at some point in the
                future.</para>
        </sect2>
        <sect2>
            <title>KISS</title>
            <para>The old "Keep It <link url="http://www.extremeprogramming.org/rules/simple.html"
                    >Simple</link> Stupid" principle is very important. Design for what is needed
                now in a well, but as simple as possible manner. You will not impress anyone by
                demonstrating how complex code you can write. Note that shorter code does not always
                imply simpler code. Martin Fowler has a good <link
                    url="http://www.refactoring.com/catalog/splitLoop.html">refactoring
                example</link> where the resulting code is longer and slower, but is much clearer
                and simpler.</para>
        </sect2>
        <sect2 id="refactoring">
            <title>Refactoring</title>
            <para><link url="http://www.refactoring.com/catalog/splitLoop.html">Refactoring</link>
                is a process whereby you improve the quality of the code without making changes to
                the functionality. See <link url="http://www.refactoring.com/"
                >refactoring.com</link> for the full refactoring catalog.</para>
        </sect2>

    </sect1>
    <sect1 id="code_formatting">
        <title>Code Documentation, Style and Formatting</title>
        <sect2>
            <title>Java</title>
            <para>All Java source code MUST be written according to the <link
                    url="http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html">Code
                    Conventions for the Java Programming Language</link> style. The easiest way to
                ensure that your code complies with these conventions is to use the Eclipse 3.1
                built-in Java formatter. </para>
            <figure>
                <img src="images/eclipse/java_code_formatter.jpg" width="664px"/>
                <caption>Setting up Java code formatter in Eclipse</caption>
            </figure>


        </sect2>
    </sect1>
    <sect1 id="headers">
        <title>Headers</title>
        <sect2>
            <title>Java Class</title>
            <pre><![CDATA[
/**
 * One line description of the class.
 * More detailed (complete) description of the class.
 * 
 * <p>
 * Copyright &copy; 2006 UTF-X developers.
 * </p>
 * 
 * <p>
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the <a href="http://www.gnu.org/licenses/gpl.txt">GNU General
 * Public License v2 </a> as published by the Free Software Foundation.
 * </p>
 * 
 * <p>
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 * </p>
 * 
 * <code>
 * $Source: /cvs/utf-x/framework/doc/devguide/devguide.xml,v $
 * </code>
 * 
 * @author Jacek Radajewski
 * @author Other Author
 * @author Yet Another Author
 * @version $Revision: 1.11.2.3 $ $Date: 2006/11/09 02:52:52 $ $Name:  $
 */                
                ]]>
                </pre>
        </sect2>
        <sect2>
            <title>Java Method</title>
            <para>Example of a typical Java method header with signature.</para>
            <pre><![CDATA[
/**
 * Parses an XML document file and returns the total number of utfx:test elements.
 * 
 * @param xmlFile the file that represents the XML document to be parsed and process
 *
 * @throws IllegalArgumentException if the file does not exist or any other IO error
 *         occurs
 * @throws SAXException if any error occurs during parsing of the file.
 *
 * @return the number of utfx:test elements found.
 */
 public int countUtfxElements(File xmlFile) throws IllegalArgumentException, SAXException {
     .
     .
     .
     return elementCount;
} 
            
            ]]></pre>
            <sect3 id="javadoc">
                <title>JavaDoc</title>
                <para><link url="http://java.sun.com/j2se/javadoc/writingdoccomments/"
                    >JavaDoc</link> documentation ....</para>
            </sect3>
        </sect2>
        <sect2>
            <title>XML and XSLT</title>
            <pre><![CDATA[
<?xml version="1.0"?>
<!--
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	$Id: devguide.xml,v 1.11.2.3 2006/11/09 02:52:52 jacekrad Exp $
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	Purpose: Detailed description ...
	
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
	Copyright(C) 2006 UTF-X Developers.
	
	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License v2 as published
	by the Free Software Foundation (http://www.gnu.org/licenses/gpl.txt)
	
	This program is distributed in the hope that it will be useful, but
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General Public License for more details.
	
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
            ]]></pre>
        </sect2>
    </sect1>
    <sect1 id="roadmap">
        <title>UTF-X Roadmap</title>
        <figure>
            <img src="images/roadmap.png" width="481px"/>
            <caption>Releases and branches</caption>
        </figure>
    </sect1>
    <sect1 id="release">
        <title>Release Instructions</title>
        <para>Ac copied from RELEASE_INSTRUCTIONS.txt</para>
        <pre><![CDATA[
        How-to release utf-x
=====================

* Decide when it is time to release.
* Tag the release with release_{version_number}.
  In Eclipse:
  - Select 'framework' directory.
  - Right-click -> Team -> Tag as Version
  - Please enter a version tag: release_0_0_6
* Checkout the entire codebase using the tag,
  and then proceed to go through with the following
  process before making the actual release:
   
  (need suggestions here).
  
* Inform on the website and use other channels (www.cafeaulait.org).
  
        ]]></pre>
    </sect1>
</document>
